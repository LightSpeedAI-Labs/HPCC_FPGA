add_subdirectory(../../../shared ${CMAKE_BINARY_DIR}/lib/hpccbase)
include_directories(${HPCCBaseLibrary_INCLUDE_DIRS})
include_directories(${CMAKE_BINARY_DIR}/src/common)

set(HOST_SOURCE execution_default.cpp stream_benchmark.cpp)

if (INTELFPGAOPENCL_FOUND)
    include_directories(${IntelFPGAOpenCL_INCLUDE_DIRS})
    add_library(stream_intel STATIC ${HOST_SOURCE})
    add_executable(STREAM_FPGA_intel main.cpp)
    target_link_libraries(stream_intel "${IntelFPGAOpenCL_LIBRARIES}" "${OpenMP_CXX_FLAGS}")
    target_link_libraries(STREAM_FPGA_intel hpcc_fpga_base)
    target_link_libraries(STREAM_FPGA_intel stream_intel)
    if (USE_SVM)
        target_compile_definitions(stream_intel PRIVATE -DCL_VERSION_2_0)
    endif()
    target_compile_definitions(stream_intel PRIVATE -DINTEL_FPGA)
    target_compile_options(stream_intel PRIVATE "${OpenMP_CXX_FLAGS}")
    add_test(NAME test_intel_host_executable COMMAND $<TARGET_FILE:STREAM_FPGA_intel> -h)
endif()

if (Vitis_FOUND)
    include_directories(${Vitis_INCLUDE_DIRS})
    add_library(stream_xilinx STATIC ${HOST_SOURCE})
    add_executable(STREAM_FPGA_xilinx main.cpp)
    target_link_libraries(stream_xilinx ${Vitis_LIBRARIES} "${OpenMP_CXX_FLAGS}")
    target_link_libraries(STREAM_FPGA_xilinx hpcc_fpga_base)
    target_link_libraries(STREAM_FPGA_xilinx stream_ixilinx)
    target_compile_definitions(stream_xilinx PRIVATE -DXILINX_FPGA)
    target_compile_options(stream_xilinx PRIVATE "${OpenMP_CXX_FLAGS}")
    add_test(NAME test_xilinx_host_executable COMMAND $<TARGET_FILE:STREAM_FPGA_xilinx> -h)
endif()
