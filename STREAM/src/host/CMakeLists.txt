include_directories(../../../extern/cxxopts/include)

set(HEADER_FILES execution.h setup/fpga_setup.hpp stream_functionality.hpp)
set(HOST_SOURCE execution_default.cpp main.cpp setup/fpga_setup.cpp stream_functionality.cpp)

if (INTELFPGAOPENCL_FOUND)
    include_directories(${IntelFPGAOpenCL_INCLUDE_DIRS})
    include_directories(${CMAKE_BINARY_DIR}/src/common)
    add_executable(STREAM_FPGA_intel ${HOST_SOURCE} ${HEADER_FILES})
    target_link_libraries(STREAM_FPGA_intel "${IntelFPGAOpenCL_LIBRARIES}" "${OpenMP_CXX_FLAGS}")
    if (USE_SVM)
        target_compile_definitions(STREAM_FPGA_intel PRIVATE -DCL_VERSION_2_0)
    endif()
    target_compile_definitions(STREAM_FPGA_intel PRIVATE -DINTEL_FPGA)
    target_compile_options(STREAM_FPGA_intel PRIVATE "${OpenMP_CXX_FLAGS}")
    add_test(NAME test_intel_host_executable COMMAND $<TARGET_FILE:STREAM_FPGA_intel> -h)
endif()

if (Vitis_FOUND)
    include_directories(${Vitis_INCLUDE_DIRS})
    include_directories(${CMAKE_BINARY_DIR}/src/common)
    add_executable(STREAM_FPGA_xilinx ${HOST_SOURCE} ${HEADER_FILES})
    target_link_libraries(STREAM_FPGA_xilinx ${Vitis_LIBRARIES} "${OpenMP_CXX_FLAGS}")
    target_compile_definitions(STREAM_FPGA_xilinx PRIVATE -DXILINX_FPGA)
    target_compile_options(STREAM_FPGA_xilinx PRIVATE "${OpenMP_CXX_FLAGS}")
    add_test(NAME test_xilinx_host_executable COMMAND $<TARGET_FILE:STREAM_FPGA_xilinx> -h)
endif()
