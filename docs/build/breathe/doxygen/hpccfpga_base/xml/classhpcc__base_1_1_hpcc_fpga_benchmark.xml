<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classhpcc__base_1_1_hpcc_fpga_benchmark" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>hpcc_base::HpccFpgaBenchmark</compoundname>
    <includes refid="hpcc__benchmark_8hpp" local="no">hpcc_benchmark.hpp</includes>
    <templateparamlist>
      <param>
        <type>class TSettings</type>
      </param>
      <param>
        <type>class TData</type>
      </param>
      <param>
        <type>class TOutput</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classhpcc__base_1_1_hpcc_fpga_benchmark_1a23db346fcd25c91ab72534361324761f" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classhpcc__base_1_1_execution_settings" kindref="compound">ExecutionSettings</ref>&lt; TSettings &gt; &gt;</type>
        <definition>std::unique_ptr&lt;ExecutionSettings&lt;TSettings&gt; &gt; hpcc_base::HpccFpgaBenchmark&lt; TSettings, TData, TOutput &gt;::executionSettings</definition>
        <argsstring></argsstring>
        <name>executionSettings</name>
        <briefdescription>
<para>The used execution settings that will be generated by <ref refid="classhpcc__base_1_1_hpcc_fpga_benchmark_1abdfd714f0038191b244a2d61b305f56b" kindref="member">setupBenchmark()</ref>. It should be laos used by all other methods to read the current benchmark settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" line="205" column="21" bodyfile="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classhpcc__base_1_1_hpcc_fpga_benchmark_1afb7d60eb1d319510584e1ffaa318a68a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void hpcc_base::HpccFpgaBenchmark&lt; TSettings, TData, TOutput &gt;::addAdditionalParseOptions</definition>
        <argsstring>(cxxopts::Options &amp;options)</argsstring>
        <name>addAdditionalParseOptions</name>
        <param>
          <type>cxxopts::Options &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Add additional options to the program parameter parser. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>The options object that will be used to parse the input parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" line="213" column="5" bodyfile="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" bodystart="213" bodyend="213"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhpcc__base_1_1_hpcc_fpga_benchmark_1a29c978a75df4a03cc6752840d8fc6f35" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::unique_ptr&lt; TData &gt;</type>
        <definition>virtual std::unique_ptr&lt;TData&gt; hpcc_base::HpccFpgaBenchmark&lt; TSettings, TData, TOutput &gt;::generateInputData</definition>
        <argsstring>()=0</argsstring>
        <name>generateInputData</name>
        <briefdescription>
<para>Allocate and initiate the input data for the kernel. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::unique_ptr&lt;TData&gt; A data class containing the initialized data </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" line="223" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classhpcc__base_1_1_hpcc_fpga_benchmark_1aee91a00a5abe5c24441833b3cf80cfb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::unique_ptr&lt; TOutput &gt;</type>
        <definition>virtual std::unique_ptr&lt;TOutput&gt; hpcc_base::HpccFpgaBenchmark&lt; TSettings, TData, TOutput &gt;::executeKernel</definition>
        <argsstring>(TData &amp;data)=0</argsstring>
        <name>executeKernel</name>
        <param>
          <type>TData &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Execute the benchmark kernel and measure performance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The initialized data for the kernel. It will be replaced by the kernel output for validation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::unique_ptr&lt;TOutput&gt; A data class containing the measurement results of the execution </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" line="232" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classhpcc__base_1_1_hpcc_fpga_benchmark_1aa36b24350419193b6600ff9970e36a68" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool hpcc_base::HpccFpgaBenchmark&lt; TSettings, TData, TOutput &gt;::validateOutputAndPrintError</definition>
        <argsstring>(TData &amp;data)=0</argsstring>
        <name>validateOutputAndPrintError</name>
        <param>
          <type>TData &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Validate the output of the execution. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The output data after kernel execution </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true If the validation is a success. </para>
</simplesect>
<simplesect kind="return"><para>false If the validation failed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" line="242" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classhpcc__base_1_1_hpcc_fpga_benchmark_1a2a2aac08eab38e7c4c10eb757b53fe08" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void hpcc_base::HpccFpgaBenchmark&lt; TSettings, TData, TOutput &gt;::printResults</definition>
        <argsstring>(const TOutput &amp;output)=0</argsstring>
        <name>printResults</name>
        <param>
          <type>const TOutput &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Prints the measurement results of the benchmark to std::cout. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The measurement data of the kernel execution </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" line="250" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classhpcc__base_1_1_hpcc_fpga_benchmark_1aa704967035afc28c85635f93fe52a1c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unique_ptr&lt; TSettings &gt;</type>
        <definition>std::unique_ptr&lt;TSettings&gt; hpcc_base::HpccFpgaBenchmark&lt; TSettings, TData, TOutput &gt;::parseProgramParameters</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>parseProgramParameters</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parses and returns program options using the cxxopts library. The parsed parameters are depending on the benchmark that is implementing function. The header file is used to specify a unified interface so it can also be used in the testing binary. cxxopts is used to parse the parameters. <simplesect kind="see"><para><ulink url="https://github.com/jarro2783/cxxopts">https://github.com/jarro2783/cxxopts</ulink></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of input parameters as it is provided by the main function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>Strings containing the input parameters as provided by the main function</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>program settings that are created from the given program arguments </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" line="267" column="5" bodyfile="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" bodystart="267" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classhpcc__base_1_1_hpcc_fpga_benchmark_1ad2856191efb352d2b2907c33a6da5243" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hpcc_base::HpccFpgaBenchmark&lt; TSettings, TData, TOutput &gt;::printFinalConfiguration</definition>
        <argsstring>(ExecutionSettings&lt; TSettings &gt; const &amp;executionSettings)</argsstring>
        <name>printFinalConfiguration</name>
        <param>
          <type><ref refid="classhpcc__base_1_1_execution_settings" kindref="compound">ExecutionSettings</ref>&lt; TSettings &gt; const &amp;</type>
          <declname>executionSettings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prints the used configuration to std out before starting the actual benchmark.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>executionSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>The program settings that are parsed from the command line using parseProgramParameters and extended by the used OpenCL context, program and device </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" line="328" column="5" bodyfile="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" bodystart="328" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classhpcc__base_1_1_hpcc_fpga_benchmark_1abdfd714f0038191b244a2d61b305f56b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hpcc_base::HpccFpgaBenchmark&lt; TSettings, TData, TOutput &gt;::setupBenchmark</definition>
        <argsstring>(const int argc, char const *const *argv)</argsstring>
        <name>setupBenchmark</name>
        <param>
          <type>const int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char const *const *</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Selects and prepares the target device and prints the final configuration. This method will initialize the executionSettings that are needed for the benchmark execution. Thus, it has to be called before <ref refid="classhpcc__base_1_1_hpcc_fpga_benchmark_1a168c0b068f17501240e32aa552b24cdf" kindref="member">executeBenchmark()</ref> or <ref refid="classhpcc__base_1_1_hpcc_fpga_benchmark_1aee91a00a5abe5c24441833b3cf80cfb2" kindref="member">executeKernel()</ref> method are called! </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of input parameters as it is provided by the main function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>Strings containing the input parameters as provided by the main function</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if setup was successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" line="346" column="5" bodyfile="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" bodystart="346" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="classhpcc__base_1_1_hpcc_fpga_benchmark_1a168c0b068f17501240e32aa552b24cdf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hpcc_base::HpccFpgaBenchmark&lt; TSettings, TData, TOutput &gt;::executeBenchmark</definition>
        <argsstring>()</argsstring>
        <name>executeBenchmark</name>
        <briefdescription>
<para>Execute the benchmark. This includes the initialization of the input data, exectuon of the kernel, validation and printing the result. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true If the validation is a success </para>
</simplesect>
<simplesect kind="return"><para>false If the validation fails or an execution error occured </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" line="408" column="5" bodyfile="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" bodystart="408" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="classhpcc__base_1_1_hpcc_fpga_benchmark_1a17c66b7f3cb8e69e899d3a3cc9adf5e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhpcc__base_1_1_execution_settings" kindref="compound">ExecutionSettings</ref>&lt; TSettings &gt; &amp;</type>
        <definition>ExecutionSettings&lt;TSettings&gt;&amp; hpcc_base::HpccFpgaBenchmark&lt; TSettings, TData, TOutput &gt;::getExecutionSettings</definition>
        <argsstring>()</argsstring>
        <name>getExecutionSettings</name>
        <briefdescription>
<para>Get the Execution Settings object for further modifications (Mainly for testing purposes) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classhpcc__base_1_1_execution_settings" kindref="compound">ExecutionSettings</ref>&amp; The execution settings object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" line="476" column="23" bodyfile="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" bodystart="476" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="classhpcc__base_1_1_hpcc_fpga_benchmark_1a53715c47d96e7f50aad2f5290042c29b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hpcc_base::HpccFpgaBenchmark&lt; TSettings, TData, TOutput &gt;::HpccFpgaBenchmark</definition>
        <argsstring>()</argsstring>
        <name>HpccFpgaBenchmark</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" line="480" column="5" bodyfile="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" bodystart="480" bodyend="482"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base benchmark class. Every benchmark should be derived from this class and implement its abstract methods. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TSettings</parametername>
</parameternamelist>
<parameterdescription>
<para>Class used to represent the program settings of the benchmark </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TData</parametername>
</parameternamelist>
<parameterdescription>
<para>Class used to represent the benchmark input and output data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TOutput</parametername>
</parameternamelist>
<parameterdescription>
<para>Class representing the measurements like timings etc </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" line="196" column="1" bodyfile="/Users/mariusme/Documents/repos/HPCC_FPGA/shared/include/hpcc_benchmark.hpp" bodystart="196" bodyend="484"/>
    <listofallmembers>
      <member refid="classhpcc__base_1_1_hpcc_fpga_benchmark_1afb7d60eb1d319510584e1ffaa318a68a" prot="protected" virt="virtual"><scope>hpcc_base::HpccFpgaBenchmark</scope><name>addAdditionalParseOptions</name></member>
      <member refid="classhpcc__base_1_1_hpcc_fpga_benchmark_1a168c0b068f17501240e32aa552b24cdf" prot="public" virt="non-virtual"><scope>hpcc_base::HpccFpgaBenchmark</scope><name>executeBenchmark</name></member>
      <member refid="classhpcc__base_1_1_hpcc_fpga_benchmark_1aee91a00a5abe5c24441833b3cf80cfb2" prot="public" virt="pure-virtual"><scope>hpcc_base::HpccFpgaBenchmark</scope><name>executeKernel</name></member>
      <member refid="classhpcc__base_1_1_hpcc_fpga_benchmark_1a23db346fcd25c91ab72534361324761f" prot="protected" virt="non-virtual"><scope>hpcc_base::HpccFpgaBenchmark</scope><name>executionSettings</name></member>
      <member refid="classhpcc__base_1_1_hpcc_fpga_benchmark_1a29c978a75df4a03cc6752840d8fc6f35" prot="public" virt="pure-virtual"><scope>hpcc_base::HpccFpgaBenchmark</scope><name>generateInputData</name></member>
      <member refid="classhpcc__base_1_1_hpcc_fpga_benchmark_1a17c66b7f3cb8e69e899d3a3cc9adf5e3" prot="public" virt="non-virtual"><scope>hpcc_base::HpccFpgaBenchmark</scope><name>getExecutionSettings</name></member>
      <member refid="classhpcc__base_1_1_hpcc_fpga_benchmark_1a53715c47d96e7f50aad2f5290042c29b" prot="public" virt="non-virtual"><scope>hpcc_base::HpccFpgaBenchmark</scope><name>HpccFpgaBenchmark</name></member>
      <member refid="classhpcc__base_1_1_hpcc_fpga_benchmark_1aa704967035afc28c85635f93fe52a1c7" prot="public" virt="non-virtual"><scope>hpcc_base::HpccFpgaBenchmark</scope><name>parseProgramParameters</name></member>
      <member refid="classhpcc__base_1_1_hpcc_fpga_benchmark_1ad2856191efb352d2b2907c33a6da5243" prot="public" virt="non-virtual"><scope>hpcc_base::HpccFpgaBenchmark</scope><name>printFinalConfiguration</name></member>
      <member refid="classhpcc__base_1_1_hpcc_fpga_benchmark_1a2a2aac08eab38e7c4c10eb757b53fe08" prot="public" virt="pure-virtual"><scope>hpcc_base::HpccFpgaBenchmark</scope><name>printResults</name></member>
      <member refid="classhpcc__base_1_1_hpcc_fpga_benchmark_1abdfd714f0038191b244a2d61b305f56b" prot="public" virt="non-virtual"><scope>hpcc_base::HpccFpgaBenchmark</scope><name>setupBenchmark</name></member>
      <member refid="classhpcc__base_1_1_hpcc_fpga_benchmark_1aa36b24350419193b6600ff9970e36a68" prot="public" virt="pure-virtual"><scope>hpcc_base::HpccFpgaBenchmark</scope><name>validateOutputAndPrintError</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
