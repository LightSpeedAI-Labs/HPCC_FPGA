include_directories(../../../extern/cxxopts/include)

set(HEADER_FILES execution.h setup/fpga_setup.hpp random_access_functionality.hpp)
set(HOST_SOURCE execution_single.cpp main.cpp setup/fpga_setup.cpp random_access_functionality.cpp)

if (INTELFPGAOPENCL_FOUND)
    include_directories(${IntelFPGAOpenCL_INCLUDE_DIRS})
    include_directories(${CMAKE_BINARY_DIR}/src/common)
    add_executable(RandomAccess_intel ${HOST_SOURCE} ${HEADER_FILES})
    target_link_libraries(RandomAccess_intel ${IntelFPGAOpenCL_LIBRARIES})
    if (USE_SVM)
        target_compile_definitions(RandomAccess_intel PRIVATE -DCL_VERSION_2_0)
    endif()
    target_compile_definitions(RandomAccess_intel PRIVATE -DINTEL_FPGA)
endif()

if (Vitis_FOUND)
    include_directories(${Vitis_INCLUDE_DIRS})
    include_directories(${CMAKE_BINARY_DIR}/src/common)
    add_executable(RandomAccess_xilinx ${HOST_SOURCE} ${HEADER_FILES})
    target_link_libraries(RandomAccess_xilinx ${Vitis_LIBRARIES})
    target_compile_definitions(RandomAccess_xilinx PRIVATE -DXILINX_FPGA)
endif()
